spring:
  datasource:
    # Kubernetes 환경에서는 환경 변수를 사용하고, 로컬에서는 기본값(localhost)을 사용합니다.
    url: jdbc:mysql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:3305}/${SPRING_DATASOURCE_DB:fullerting}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:ssafy}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # MongoDB 설정: Docker Compose용으로 보이며, Kubernetes에서는 별도의 YAML 파일로 관리해야 합니다.
  # 이 파일에서는 삭제하거나 주석 처리하는 것이 좋습니다.
  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb_boot
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - /home/ubun2/mongodb/data:/data
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=ssafy

  data:
    redis:
      # Kubernetes 환경에서는 'redis-service' 같은 서비스 이름을 사용합니다.
      host: ${SPRING_REDIS_HOST:localhost}
      # Kubernetes에서는 포트 '6379'를 사용합니다.
      port: ${SPRING_REDIS_PORT:6378}

  # 보안 관련 정보 (JWT)는 환경 변수나 Kubernetes Secret으로 관리하는 것이 더 안전합니다.
  security:
    user:
      name: test
      password: 1234

  jwt:
    access: ${JWT_ACCESS_SECRET:whatwehavetowantinalifeismentalsatisfactionnotmaterialone}
    refresh: ${JWT_REFRESH_SECRET:youforgetthisyoualwaysfeelfailevenifyouwillgeteverything}
    accesstime: 432000000
    refreshtime: 604800000 # 7Days

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 110MB

  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    hibernate:
      ddl-auto: update

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY:AKIAW3MEAWFWGVMIB3VX}
      secret-key: ${AWS_SECRET_KEY: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}
    region:
      static: ap-northeast-2
    s3:
      bucket: ${S3_BUCKET:fullerting-s3-v2}
      stack:
        auto: false

springdoc:
  swagger-ui:
    path: /api/swagger-ui.html

logging:
  level:
    org:
      springframework:
        security:
          web:
            FilterChainProxy: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
    root: INFO
    com.ssafy.fullerting: DEBUG
  file:
    name: logs/application.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"

server:
  port: 8082
  servlet:
    context-path: /
  websocket:
    port: 8181
