name: Deploy Backend to Kubeadm Cluster

on:
  push:
    branches:
      - main

jobs:
  deploy:
    # 1. 러너 지정: Self-Hosted Runner 사용 (사용자 VM 환경)
    runs-on: self-hosted

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. kubectl 설치 확인 (VM 환경이므로 필요)
      - name: Ensure kubectl is installed
        run: |
          if ! command -v kubectl >/dev/null 2>&1; then
            echo "kubectl not found. Installing..."
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          else
            echo "kubectl is already installed."
          fi
          kubectl version --client

      # 3. Kubeconfig 설정
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          # KUBECONFIG_DATA 시크릿을 디코딩하여 파일을 생성합니다.
          # Kubeadm은 보통 외부 IP를 사용하므로, IP 강제 수정 로직은 제거합니다.
          echo "${{ secrets.KUBECONFIG_DATA }}" | tr -d ' \n\r' | base64 -d > ~/.kube/config

          export KUBECONFIG=~/.kube/config
          chmod 600 ~/.kube/config
          echo "KUBECONFIG set. Assuming Kubeadm configuration is correct."

          # 연결 진단
          kubectl get nodes

      # ? GitHub Secrets의 MongoDB URI 값을 YAML 파일에 주입
      - name: Inject MongoDB Secret
        run: |
          # Secrets에서 Base64로 인코딩된 MongoDB URI를 가져와 YAML 파일에 삽입합니다.
          sed -i "s|SPRING_DATA_MONGODB_URI: \"\"|SPRING_DATA_MONGODB_URI: \"${{ secrets.MONGO_URI_BASE64 }}\"|g" k8s/mongodb-secret.yaml

      # 4. 전체 k8s 디렉토리 적용
      - name: Apply all Kubernetes manifests
        run: |
          kubectl apply -f k8s/ --recursive

          # 배포 롤아웃 상태 확인 (안정성 강화)
          kubectl rollout status deployment/fullerting-backend-deployment --timeout=480s
