# 1. Secret: MySQL 사용자/DB 정보
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  labels:
    app: mysql
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "ssafy" # 실제 비밀번호로 변경
  MYSQL_DATABASE: "fullerting"
  MYSQL_USER: "fullerting-user"
  MYSQL_PASSWORD: "ssafy" # 실제 비밀번호로 변경
---
# 2. ConfigMap: 초기화 SQL 스크립트
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-config
  labels:
    app: mysql
data:
  init-db.sql: |
    CREATE USER 'fullerting-user'@'%' IDENTIFIED BY 'ssafy';
    GRANT ALL PRIVILEGES ON fullerting.* TO 'fullerting-user'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
---
# 3. Deployment: MySQL 컨테이너
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          envFrom:
            - secretRef:
                name: mysql-secret
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-init-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-init-volume
          configMap:
            name: mysql-init-config
---
# 4. Service: 클러스터 내부용 MySQL 접근
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
# 5. PVC: 영구 볼륨 청구
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi # 필요시 조정
