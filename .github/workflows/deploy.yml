# Workflow 이름
name: Deploy Backend to Kubernetes

# 1. 트리거 조건: 'main' 브랜치의 'backend/' 경로에 변경사항이 있을 때 실행
on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"
      - ".github/workflows/deploy.yml"

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository }}/backend:latest

  deploy:
    name: Deploy to Kubernetes
    needs: build # 'build' 잡이 성공해야 실행됩니다.
    runs-on: ubuntu-latest # kubectl을 실행할 러너 (self-hosted도 가능)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: List files for debugging
        run: |
          ls -R

      - name: Deploy to Kubernetes cluster
        run: |
          # k8s/deployment.yml 파일의 이미지 태그를 실제 빌드된 이미지로 변경합니다.
          sed -i 's|ghcr.io/OWNER/REPO/backend:latest|ghcr.io/${{ github.repository }}/backend:latest|g' k8s/*.yml

          # 변경된 매니페스트를 클러스터에 적용합니다.
          kubectl apply -f k8s/

          # Deployment의 재시작을 트리거하여 새로운 이미지를 pull하도록 합니다.
          kubectl rollout restart deployment/fullerting-backend-deployment
