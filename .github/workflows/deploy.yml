name: Deploy Fullerting to k3s

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    env:
      KUBECONFIG: $HOME/.kube/config # 모든 step에서 kubeconfig 사용
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. kubeconfig 세팅
      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      # 3. MySQL 관련 리소스 배포
      - name: Deploy MySQL
        run: |
          kubectl apply -f k8s/mysql-config.yaml --validate=false
          kubectl apply -f k8s/mysql-pv-claim.yaml --validate=false
          kubectl apply -f k8s/mysql-secret.yml --validate=false
          kubectl apply -f k8s/mysql-init-config.yaml --validate=false
          kubectl apply -f k8s/mysql-deployment.yml --validate=false
          kubectl apply -f k8s/mysql-service.yaml --validate=false
          kubectl rollout status deployment/mysql

      # 4. Redis 배포
      - name: Deploy Redis
        run: |
          kubectl apply -f k8s/redis.yml --validate=false
          kubectl rollout status deployment/redis

      # 5. Kafka 배포
      - name: Deploy Kafka
        run: |
          kubectl apply -f k8s/kafka.yml --validate=false
          kubectl rollout status deployment/kafka

      # 6. Backend 배포
      - name: Deploy Backend
        run: |
          kubectl apply -f k8s/backend-manifest.yml --validate=false
          kubectl rollout status deployment/fullerting-backend-deployment

      # 7. Ingress 배포 (필요 시)
      - name: Deploy Ingress
        run: |
          kubectl apply -f k8s/ingress.yml --validate=false
