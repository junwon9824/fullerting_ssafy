name: Build and Deploy Backend to k3s

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      KUBECONFIG: $HOME/.kube/config # 모든 step에서 kubectl 사용 가능

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. QEMU 설정 (cross-platform build)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Docker Buildx 설정 (rootless 권한 문제 방지)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:rootless

      # 4. DockerHub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 빌드 & 푸시 (캐시 최적화)
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fuller3:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/fuller3:latest
          cache-to: type=inline

      # 6. Kubeconfig 설정 (base64로 저장된 시크릿 사용)
      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      # 7. Kubernetes에 배포
      - name: Deploy to k3s
        run: |
          # k8s 디렉토리 전체 적용
          kubectl apply -f k8s/ --validate=false

          # backend Deployment 이미지 업데이트
          kubectl set image deployment/fullerting-backend-deployment backend=${{ secrets.DOCKER_USERNAME }}/fuller3:latest

          # 롤아웃 상태 확인
          kubectl rollout status deployment/fullerting-backend-deployment
